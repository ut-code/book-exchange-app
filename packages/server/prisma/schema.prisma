generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username                 String            @unique
  password                 String
  hashedPassword           String
  posts                    Post[]
  books                    Book[]
  requesterExchangeRequest ExchangeRequest[] @relation("RequesterExchangeRequest")
  addresseeExchangeRequest ExchangeRequest[] @relation("AddresseeExchangeRequest")

  @@map("users")
}

model Post {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String
  published Boolean  @default(false)
  viewCount Int      @default(0)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid

  @@map("posts")
}

model Book {
  id          String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  description String
  user        User   @relation(fields: [userId], references: [id])
  userId      String @db.Uuid

  @@map("books")
}

model ExchangeRequest {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  requesterUser   User     @relation("RequesterExchangeRequest", fields: [requesterUserId], references: [id])
  requesterUserId String   @db.Uuid
  addresseeUser   User     @relation("AddresseeExchangeRequest", fields: [addresseeUserId], references: [id])
  addresseeUserId String   @db.Uuid

  @@map("exchange_requests")
}
